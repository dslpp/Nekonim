import React, { useState} from 'react';
import './PersonalArea.css';


const PersonalArea = () => {
  const [user, setUser] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [currentSection, setCurrentSection] = useState('personal');
  const [isEditingPersonal, setIsEditingPersonal] = useState(false);
  const [isEditingPassword, setIsEditingPassword] = useState(false);
  const [name, setName] = useState('');
  const [surname, setSurname] = useState('');
  const [lastName, setLastName] = useState('');
  const [sex, setSex] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');

  const handleSectionChange = (section) => {
    setCurrentSection(section);
  };

  const handleEditPersonalClick = () => {
    setIsEditingPersonal(true);
  };

  const handleSavePersonalClick = () => {
    setIsEditingPersonal(false);
  };

  const handleCancelPersonalClick = () => {
    setIsEditingPersonal(false);
  };

  const handleEditPasswordClick = () => {
    setIsEditingPassword(true);
  };

  const handleSavePasswordClick = () => {
    setIsEditingPassword(false);
    setPassword('');
    setConfirmPassword('');
  };

  const handleCancelPasswordClick = () => {
    setIsEditingPassword(false);
    setPassword('');
    setConfirmPassword('');
  };

  return (
    <div className="personal-area">
      <div className="menu">
        <button onClick={() => handleSectionChange('personal')}>–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</button>
        <button onClick={() => handleSectionChange('password')}>–ü–∞—Ä–æ–ª—å</button>
        <button onClick={() => handleSectionChange('orders')}>–ó–∞–∫–∞–∑—ã</button>
      </div>
      
      <div className="cardAc">
        {currentSection === 'personal' && (
          <div>
            <h2>–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
            {!isEditingPersonal ? (
              <div>
                <p>–ò–º—è: {name}</p>
                <p>–§–∞–º–∏–ª–∏—è: {surname}</p>
                {lastName && <p>–û—Ç—á–µ—Å—Ç–≤–æ: {lastName}</p>}
                <p>–ü–æ–ª: {sex === 'male' ? '–ú—É–∂—á–∏–Ω–∞' : '–ñ–µ–Ω—â–∏–Ω–∞'}</p>
                <p>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phoneNumber}</p>
                <button onClick={handleEditPersonalClick}>–ò–∑–º–µ–Ω–∏—Ç—å</button>
              </div>
            ) : (
              <div>
                <div className="form-group">
                  <label htmlFor="firstName">–ò–º—è:</label>
                  <input
                    type="text"
                    id="firstName"
                    value={name}
                    onChange={(e) => setName(e.target.value)}
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="lastName">–§–∞–º–∏–ª–∏—è:</label>
                  <input
                    type="text"
                    id="lastName"
                    value={surname}
                    onChange={(e) => setSurname(e.target.value)}
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="middleName">–û—Ç—á–µ—Å—Ç–≤–æ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>
                  <input
                    type="text"
                    id="middleName"
                    value={lastName}
                    onChange={(e) => setLastName(e.target.value)}
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="gender">–ü–æ–ª:</label>
                  <select id="gender" value={sex} onChange={(e) => setSex(e.target.value)}>
                    <option value="male">–ú—É–∂—á–∏–Ω–∞</option>
                    <option value="female">–ñ–µ–Ω—â–∏–Ω–∞</option>
                  </select>
                </div>
                <div className="form-group">
                  <label htmlFor="phone">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</label>
                  <input
                    type="text"
                    id="phone"
                    value={phoneNumber}
                    onChange={(e) => setPhoneNumber(e.target.value)}
                  />
                </div>
                <button onClick={handleSavePersonalClick}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button onClick={handleCancelPersonalClick}>–û—Ç–º–µ–Ω–∞</button>
              </div>
            )}
          </div>
        )}

        {currentSection === 'password' && (
          <div>
            <h2>–ü–∞—Ä–æ–ª—å</h2>
            {!isEditingPassword ? (
              <div>
                <p>–¢–µ–∫—É—â–∏–π Email: {email}</p>
                <button onClick={handleEditPasswordClick}>–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å</button>
              </div>
            ) : (
              <div>
                <div className="form-group">
                  <label htmlFor="email">–ù–æ–≤—ã–π Email:</label>
                  <input
                    type="email"
                    id="email"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="password">–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å:</label>
                  <input
                    type="password"
                    id="password"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                  />
                </div>
                <div className="form-group">
                  <label htmlFor="confirmPassword">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:</label>
                  <input
                    type="password"
                    id="confirmPassword"
                    value={confirmPassword}
                    onChange={(e) => setConfirmPassword(e.target.value)}
                  />
                </div>
                <button onClick={handleSavePasswordClick}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                <button onClick={handleCancelPasswordClick}>–û—Ç–º–µ–Ω–∞</button>
              </div>
            )}
          </div>
        )}

        {currentSection === 'orders' && (
          <div>
            <h2>–ó–∞–∫–∞–∑—ã</h2>
            <p>Coming Soon üòÅ</p>
          </div>
        )}
      </div>
    </div>
  );
}

export default PersonalArea;